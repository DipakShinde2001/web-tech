import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

np.random.seed(42)
data_size = 500
df = pd.DataFrame({
 'User ID': range(1, data_size + 1),
 'Gender': np.random.choice([0, 1], size=data_size), 
 'Age': np.random.randint(18, 60, data_size),
 'EstimatedSalary': np.random.randint(20000, 150000, data_size),
 'Purchased': np.random.choice([0, 1], size=data_size, p=[0.7, 0.3]) # 70% No, 30% Yes
})

X = df[['Gender', 'Age', 'EstimatedSalary']]
y = df['Purchased']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

model = LogisticRegression()
model.fit(X_train_scaled, y_train)

y_pred = model.predict(X_test_scaled)

print("\nModel Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

predictions_df = pd.DataFrame({'Actual': y_test.values, 'Predicted': y_pred})
print("\nSample Predictions:")
print(predictions_df.head())
