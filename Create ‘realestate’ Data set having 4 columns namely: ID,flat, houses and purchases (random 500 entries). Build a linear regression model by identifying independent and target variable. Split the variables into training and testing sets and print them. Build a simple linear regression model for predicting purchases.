import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

np.random.seed(42)
data_size = 500
df = pd.DataFrame({
 'ID': range(1, data_size + 1),
 'Flat': np.random.randint(50000, 300000, data_size), 
 'Houses': np.random.randint(100000, 500000, data_size), 
 'Purchases': np.random.randint(1, 100, data_size) 
})

X = df[['Flat', 'Houses']]
y = df['Purchases']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

print("Training Set (X_train):")
print(X_train.head())
print("\nTesting Set (X_test):")
print(X_test.head())

model = LinearRegression()
model.fit(X_train, y_train)

print("\nModel Coefficients:", model.coef_)
print("Model Intercept:", model.intercept_)

y_pred = model.predict(X_test)

predictions_df = pd.DataFrame({'Actual': y_test.values, 'Predicted': y_pred})
print("\nSample Predictions:")
print(predictions_df.head())
